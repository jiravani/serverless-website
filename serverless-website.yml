AWSTemplateFormatVersion: 2010-09-09
Outputs:
  APIEndPoint:
    Description: This is the invocation endpoint for this API
    Value: !Sub >-
      https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/${ServerlessRestApiProdStage}/
Description: This is a url redirection tool for your domain (bit.ly clone)
Resources:
  ServerlessRestApiProdStage:
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      DeploymentId: !Ref ServerlessRestApiDeployment05484783ae
      RestApiId: !Ref ServerlessRestApi
      StageName: Prod

  UrlRedirectLambdaApi1PermissionProd:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      Principal: apigateway.amazonaws.com
      FunctionName: !Ref UrlRedirectLambda
      SourceArn: !Sub 
        - >-
          arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/*
        - __Stage__: Prod
          __ApiId__: !Ref ServerlessRestApi

  UrlRedirectLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
  UrlRedirectLambdaApi1PermissionTest:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:invokeFunction'
      Principal: apigateway.amazonaws.com
      FunctionName: !Ref UrlRedirectLambda
      SourceArn: !Sub 
        - >-
          arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*
        - __Stage__: '*'
          __ApiId__: !Ref ServerlessRestApi
  UrlRedirectLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        ZipFile: |
          def lambda_handler(event, context):
            return {
              "statusCode": 200,
              "body": "This is Josh's website",
              "headers": {
                "Content-Type": "text/html"
              }
            }
      Description: 'This is a lambda function'
      Tags:
        - Value: SAM
          Key: 'lambda:createdBy'
      MemorySize: 128
      Handler: index.lambda_handler
      Role: !GetAtt 
        - UrlRedirectLambdaRole
        - Arn
      Timeout: 3
      Runtime: python2.7
  ServerlessRestApiDeployment05484783ae:
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId: !Ref ServerlessRestApi
      Description: 'RestApi deployment id: 05484783aeb5dcfe2d3ddd9f325aa11633e4b62b'
      StageName: Stage
  ServerlessRestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Body:
        info:
          version: '1.0'
          title: !Ref 'AWS::StackName'
        paths:
          /:
            x-amazon-apigateway-any-method:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub >-
                  arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UrlRedirectLambda.Arn}/invocations
              responses: {}
        swagger: '2.0'

